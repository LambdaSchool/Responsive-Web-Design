// #1 Inspect Element
// #2 Adjust CSS in the the dev inspector
// #3 Copy new styles into your actual project
// #4 Save and watch terminal for updates
// #5 refresh browser and start over again
// Variables on top

/*

	Example usage:

	.some-element {
		@media @tablet {
			width: 100%;
		}

		@media @phone {
			width: 50%;
		}
	}

*/

// LESS escaping

@phone: ~"(min-width: 400px)";
@tablet: ~"(min-width: 768px)";
@laptop: ~"(min-width: 1100px)";
@background-color--blue:#1539E9;

// Mixins below variables

.transition-properties(...) {
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  transition: @arguments;
}

.keyframes(@name; @arguments) {
	@-moz-keyframes @name { @arguments(); }
	@-webkit-keyframes @name { @arguments(); }
	@keyframes @name { @arguments(); }
}

.animation(@arguments) {
	-webkit-animation: @arguments;
	-moz-animation: @arguments;
	animation: @arguments;
}

.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
}

.animation2 (@name, @duration: 300ms, @delay: 0, @ease: ease) {
	-webkit-animation: @name @duration @delay @ease;
	-moz-animation:    @name @duration @delay @ease;
	-ms-animation:     @name @duration @delay @ease;
}

.transition (@transition) {
	-webkit-transition: @transition;  
	-moz-transition:    @transition;
	-ms-transition:     @transition; 
	-o-transition:      @transition;  
}
.transform(@string){
	-webkit-transform: @string;
	-moz-transform: 	 @string;
	-ms-transform: 		 @string;
	-o-transform: 		 @string;
}

.scale (@factor) {
	-webkit-transform: scale(@factor);
	-moz-transform: 	 scale(@factor);
	-ms-transform: 		 scale(@factor);
	-o-transform: 		 scale(@factor);
}

.rotate (@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: 	 rotate(@deg);
	-ms-transform: 		 rotate(@deg);
	-o-transform: 		 rotate(@deg);
}

.skew (@deg, @deg2) {
	-webkit-transform:       skew(@deg, @deg2);
	-moz-transform: 	 skew(@deg, @deg2);
	-ms-transform: 		 skew(@deg, @deg2);
	-o-transform: 		 skew(@deg, @deg2);
}

.translate (@x, @y:0) {
	-webkit-transform:       translate(@x, @y);
	-moz-transform: 	 translate(@x, @y);
	-ms-transform: 		 translate(@x, @y);
	-o-transform: 		 translate(@x, @y);
}

.translate3d (@x, @y: 0, @z: 0) {
	-webkit-transform:       translate3d(@x, @y, @z);
	-moz-transform: 	 translate3d(@x, @y, @z);
	-ms-transform: 		 translate3d(@x, @y, @z);
	-o-transform: 		 translate3d(@x, @y, @z);
}
.perspective (@value: 1000) {
	-webkit-perspective: 	@value;
	-moz-perspective: 	@value;
	-ms-perspective: 	@value;
	perspective: 		@value;
}

	@theme: #555; //You can change the theme
/* Mixins */
.shadow {
	box-shadow: 0 1px 2px 0 @theme;
}
/** Operation **/
.divider {
	border-style: solid;
	border-width: 0 1px 0 1px;
	border-color: transparent @theme - #111 transparent @theme + #333;
}
.gradient {
	background: linear-gradient(top, @theme + #252525 0%, @theme + #171717 50%, @theme - #010101 51%, @theme + #151515 100%);
}
.hovereffect {
	background: linear-gradient(top, @theme - #010101 0%, @theme - #121212 50%, @theme - #222222 51%, @theme - #050505 100%);
}
/* Parametric Mixins */
.border(@radius:3px) {
	border-radius: @radius;
	border: 1px solid @theme - #050505;
}

/** Guarded Mixins **/
.textcolor(@txtcolor) when (lightness(@txtcolor) >= 50%) {
	color: @txtcolor;
	text-shadow: 1px 1px 0px #000000;
}
.textcolor(@txtcolor) when (lightness(@txtcolor) < 50%) {
	color: @txtcolor;
	text-shadow: 1px 1px 0px #ffffff;
}